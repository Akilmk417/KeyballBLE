#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R      &kp T                                                 &kp Y        &kp U  &kp I            &kp O    &kp P
&mt LEFT_SHIFT A  &kp S         &kp D         &kp F      &kp G      &mkp MCLK                   &kp BACKSLASH  &kp H        &kp J  &kp K            &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V      &kp B      &mkp LCLK                   &kp MINUS      &kp N        &kp M  &lt 5 LA(COMMA)  &kp DOT  &kp BACKSPACE
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 TAB  &kp SPACE  &lt_to_layer_0 1 SPACE      &kp BACKSPACE  &lt 2 ENTER                                   &kp DEL
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        NUMBER {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2      &kp NUMBER_3       &kp NUMBER_4  &kp NUMBER_5                                         &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp LEFT_SHIFT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans        &trans        &trans        &trans                   &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ENTER
&kp LEFT_SHIFT  &kp SLASH         &trans             &trans        &trans        &kp CAPS      &kp LANG_ZENKAKUHANKAKU  &kp PERIOD    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSPACE
&trans          &trans            &trans             &trans        &trans        &trans        &kp DELETE               &kp NUMBER_0                                            &kp DELETE
            >;

            sensor-bindings = <&ROTATE SCRL_LEFT SCRL_RIGHT>;
        };

        ARROW {
            bindings = <
&kp ESC           &trans  &trans  &trans       &trans                      &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp LEFT_SHIFT    &trans  &trans  &trans       &trans  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp ENTER
&kp LEFT_SHIFT    &trans  &trans  &trans       &trans  &trans      &trans  &trans  &trans          &trans          &trans           &kp BACKSPACE
&kp LEFT_CONTROL  &trans  &trans  &lt 6 ENTER  &trans  &trans      &trans  &trans                                                   &kp DELETE
            >;
        };

        MOUSETWO {
            bindings = <
&trans  &trans     &trans     &trans     &trans                      &trans  &trans     &trans     &trans     &trans
&trans  &mkp MCLK  &mkp RCLK  &mkp LCLK  &trans  &trans      &trans  &trans  &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans     &trans     &trans     &trans  &trans      &trans  &trans  &trans     &trans     &trans     &trans
&trans  &trans     &trans     &trans     &trans  &trans      &trans  &trans                                   &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans     &trans     &trans     &trans                         &trans  &trans     &trans     &trans     &trans
&trans  &mkp MCLK  &mkp RCLK  &mkp LCLK  &trans  &trans         &trans  &trans  &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans     &trans     &trans     &trans  &mkp LCLK      &trans  &trans  &trans     &trans     &trans     &trans
&trans  &trans     &trans     &trans     &trans  &trans         &trans  &trans                                   &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
